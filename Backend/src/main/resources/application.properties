# Datasource.url is the url of the database
# after the ? is the parameter to create the database if it does not exist
#spring.datasource.url=jdbc:mysql://localhost:3306/blogfinalprojectdb?createDatabaseIfNotExist=true
spring.datasource.url=jdbc:mysql://localhost:3306/blogfinalprojectdb?dropCreateDatabaseIfExist=true
spring.datasource.username=root
spring.datasource.password=123456



#show sql in the log
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update)
# update: update the schema if entity is changed, else do nothing
spring.jpa.hibernate.ddl-auto=update

# set username and password for Spring Security:

#spring.security.user.name=admin
#spring.security.user.password=$2a$10$rK6HNOnI/K1JUd7TGDq.IuPA/PzBaN95Adcm.Vd3b2S0DDFH3s1Z.
# the password is "password" encrypted with BCryptPasswordEncoder

# set the secret key for JWT (JSON Web Token)
rsa.private-key=classpath:certs/private.pem
# set the public key for JWT
rsa.public-key=classpath:certs/pub.pem

springdoc.swagger-ui.path=/swagger

# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=129314425821-ue5vg5patdij955l8tdov81sj34mlmdn.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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

# Github OAuth2
spring.security.oauth2.client.registration.github.client-id=Ov23liLZElQ05sHvhz10
spring.security.oauth2.client.registration.github.client-secret=698343e8247ffeb8766641cde98c95f18f106c5f

# logging
logging.level.org.springframework.security=TRACE

# password for oauth2 client
oauth2.fixed-password=214#%43DSFdsffSDdf$#%gffffd$%64HhgffdkilzxcZXCaqwe%@